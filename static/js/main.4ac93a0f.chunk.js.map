{"version":3,"sources":["context/store-context.ts","mobx/stores/app-store.ts","mobx/store.ts","components/Home/index.tsx","components/Document/index.tsx","components/Gallery/index.tsx","components/Book/index.tsx","components/UserProfile/index.tsx","config/routes.tsx","index.tsx"],"names":["StoreContext","createContext","StoreProvider","Provider","AppStore","title","user","setTitle","action","extendObservable","this","undefined","store","router","app","RouterStore","Home","observer","useContext","goTo","route","views","gallery","queryParams","start","document","params","id","style","display","onClick","book","page","userProfile","username","tab","Document","Gallery","isEmpty","map","param","key","Book","UserProfile","name","backgroundColor","color","routes","home","Route","path","component","onEnter","_","console","log","beforeExit","onParamsChange","window","confirm","beforeEnter","alert","startRouter","html5history","ReactDOM","render","value","getElementById"],"mappings":"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","file":"static/js/main.4ac93a0f.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\nimport { RootStore } from \"../mobx/store\";\r\n\r\n// Use React context to make your store available in your application\r\nexport const StoreContext = createContext({} as RootStore);\r\nexport const StoreProvider = StoreContext.Provider;","import { extendObservable, action } from 'mobx';\r\n\r\nclass AppStore {\r\n  public title?: string;\r\n  public user?: any;\r\n\r\n  constructor() {\r\n    extendObservable(this, {\r\n      title: 'MobX Router Tutorial',\r\n      user: undefined\r\n    });\r\n  }\r\n\r\n  setTitle = action((title: string | undefined) => {\r\n    this.title = title;\r\n  });\r\n}\r\n\r\nexport default AppStore;","import { RouterStore } from 'mobx-router';\r\nimport AppStore from './stores/app-store';\r\n\r\nexport class RootStore {\r\n  public router: RouterStore<RootStore>;\r\n  public app: AppStore;\r\n\r\n  constructor() {\r\n    this.router = new RouterStore<RootStore>(this);\r\n    this.app = new AppStore();\r\n  }\r\n}\r\n\r\nconst store = new RootStore();\r\n\r\nexport default store;","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Link } from 'mobx-router';\r\nimport views from '../../config/routes';\r\nimport { useContext } from 'react';\r\nimport { StoreContext } from '../../context/store-context';\r\n\r\nexport const Home = observer(() => {\r\n  const store = useContext(StoreContext);\r\n  const { router: { goTo } } = store;\r\n\r\n  return (\r\n    <div>\r\n      <h3> Home </h3>\r\n\r\n      <Link router={store.router} route={views.gallery}> Go to gallery </Link>\r\n\r\n      <br />\r\n      <br />\r\n      <Link router={store.router} route={views.gallery} queryParams={{ start: 5 }}>\r\n        Go to gallery and start from 5th image\r\n        </Link>\r\n\r\n      <br />\r\n      <br />\r\n\r\n      <Link router={store.router} route={views.document} params={{ id: 456 }} title=\"Go to document 456\" />\r\n\r\n      <br />\r\n      <br />\r\n\r\n      <Link router={store.router} route={views.document} params={{ id: 999 }}>\r\n        <div style={{ display: 'inline-block' }}>\r\n          Go to document <b> 999 </b>\r\n        </div>\r\n      </Link>\r\n\r\n      <br />\r\n      <br />\r\n\r\n      <button onClick={() => goTo(views.document, { id: 123 })}> Go to document 123</button>\r\n\r\n      <br />\r\n      <br />\r\n\r\n      <Link router={store.router} route={views.book} params={{ id: 250, page: 130 }} title=\"Go to book 250, page 130\" />\r\n\r\n      <br />\r\n      <br />\r\n\r\n      <button onClick={() => goTo(views.userProfile, { username: 'kitze', tab: 'articles' })}>\r\n        go to user kitze\r\n        </button>\r\n\r\n    </div>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useContext } from 'react';\r\nimport { StoreContext } from '../../context/store-context';\r\n\r\n//style\r\nexport const Document = observer(() => {\r\n\r\n  const { router: { params } } = useContext(StoreContext);\r\n\r\n  return (\r\n    <div>\r\n      <h3> Document </h3>\r\n      <div> with id: {params?.id} </div>\r\n    </div>\r\n  );\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { isEmpty, map } from 'lodash';\r\nimport { StoreContext } from '../../context/store-context';\r\n\r\nexport const Gallery = observer(() => {\r\n  const store = useContext(StoreContext);\r\n  const { router: { queryParams } } = store;\r\n\r\n  return (\r\n    <div>\r\n      <h3>Gallery </h3>\r\n      {\r\n        !isEmpty(queryParams) && <ul>\r\n          {\r\n            map(queryParams, (param, key) => <li key={key} > <span>{key} </span> - <b>{param}</b > </li>)}\r\n        </ul>\r\n      }\r\n    </div>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useContext } from 'react';\r\nimport { StoreContext } from '../../context/store-context';\r\n\r\nexport const Book = observer(() => {\r\n  const { router: { params } } = useContext(StoreContext);\r\n\r\n  return (\r\n    <div>\r\n      <h1> Book {params?.id} </h1>\r\n      <h3> Page: {params?.page} </h3>\r\n    </div>\r\n  );\r\n});\r\n","import React, { useContext } from 'react';\r\nimport { map } from 'lodash';\r\nimport { observer } from 'mobx-react-lite';\r\nimport views from '../../config/routes';\r\nimport { StoreContext } from '../../context/store-context';\r\n\r\nexport const UserProfile = observer(() => {\r\n  const store = useContext(StoreContext);\r\n  const { router: { params, goTo } } = store;\r\n\r\n  const tabs = [\r\n    {\r\n      name: 'Articles',\r\n      id: 'articles',\r\n    },\r\n    {\r\n      name: 'Following',\r\n      id: 'following'\r\n    },\r\n    {\r\n      name: 'Followers',\r\n      id: 'followers'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <h1>User profile for: {params?.username} </h1>\r\n\r\n      <h3> Friends: </h3>\r\n      <ul>\r\n        <li>\r\n          <button onClick={() => goTo(views.userProfile, { ...params, username: 'kristijan' }, store)}>\r\n            Kristijan Ristovski\r\n            </button>\r\n        </li>\r\n        <li>\r\n          <button onClick={() => goTo(views.userProfile, { ...params, username: 'john' }, store)}>\r\n            John Doe\r\n                </button>\r\n        </li>\r\n      </ul>\r\n\r\n      <h3> Tabs: </h3>\r\n\r\n      {\r\n        map(tabs, (tab, key) => <button\r\n          key={key}\r\n          style={{ ...params?.tab === tab.id && { backgroundColor: 'blue', color: 'white' } }}\r\n          onClick={() => goTo(views.userProfile, { ...(params as { username: string, tab?: string }), tab: tab.id }, store)}>\r\n          {tab.name}\r\n        </button>\r\n        )}\r\n\r\n      {\r\n        params?.tab === 'articles' && <div>\r\n          <ul>\r\n            <li>Article 1 </li>\r\n            <li> Article 2 </li>\r\n            <li> Article 3 </li>\r\n          </ul>\r\n        </div>\r\n      }\r\n\r\n      {\r\n        params?.tab === 'following' && <div>\r\n          <ul>\r\n            <li>John Doe </li>\r\n            <li> John Snow </li>\r\n            <li> John Oliver </li>\r\n          </ul>\r\n        </div>\r\n      }\r\n\r\n      {\r\n        params?.tab === 'followers' && <div>\r\n          <ul>\r\n            <li>This guy </li>\r\n            <li> That guy </li>\r\n            <li> That other guy </li>\r\n          </ul>\r\n        </div>\r\n      }\r\n\r\n    </div>\r\n  );\r\n});\r\n\r\n","import React from 'react';\r\n\r\n//models\r\nimport { Route } from 'mobx-router';\r\n\r\n//components\r\nimport { Home } from '../components/Home';\r\nimport { Document } from '../components/Document';\r\nimport { Gallery } from '../components/Gallery';\r\nimport { Book } from '../components/Book';\r\nimport { UserProfile } from '../components/UserProfile';\r\nimport { RootStore } from '../mobx/store';\r\n\r\nconst routes = {\r\n  home: new Route<RootStore>({\r\n    path: '/',\r\n    component: <Home />\r\n  }),\r\n  userProfile: new Route<RootStore, {\r\n    username: string;\r\n    tab?: string;\r\n  }>({\r\n    path: '/profile/:username/:tab',\r\n    component: <UserProfile />,\r\n    onEnter: (_, { username, tab }) => {\r\n      console.log(`entering ${username} user profile! (Tab: ${tab})`);\r\n    },\r\n    beforeExit: () => {\r\n      console.log('exiting user profile!');\r\n    },\r\n    onParamsChange: (route, params) => {\r\n      console.log('params changed to', params);\r\n    }\r\n  }),\r\n  gallery: new Route<RootStore, any, any>({\r\n    path: '/gallery',\r\n    component: <Gallery />,\r\n    beforeExit: () => {\r\n      const result = window.confirm('Are you sure you want to leave the gallery?');\r\n      return result;\r\n    },\r\n    onEnter: (route, params, store, queryParams) => {\r\n      console.log('queryParams', queryParams);\r\n    }\r\n  }),\r\n  document: new Route<RootStore, {}, { id: number }>({\r\n    path: '/document/:id',\r\n    component: <Document />,\r\n    beforeEnter: (route, params, store) => {\r\n      const userIsLoggedIn = store.app.user;\r\n      if (!userIsLoggedIn) {\r\n        alert('Only logged in users can enter this route!');\r\n        return false;\r\n      }\r\n    },\r\n    onEnter: (route, params) => {\r\n      console.log(`entering document with params`, params);\r\n    }\r\n  }),\r\n  book: new Route<RootStore, {}, {\r\n    id: string,\r\n    page: string,\r\n  }>({\r\n    path: '/book/:id/page/:page',\r\n    component: <Book />,\r\n    onEnter: (route, params, store) => {\r\n      console.log(`entering book with params`, params);\r\n      store.app.setTitle(route.title);\r\n    }\r\n  })\r\n};\r\nexport default routes;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { MobxRouter, startRouter } from 'mobx-router';\r\n\r\nimport { StoreProvider } from \"./context/store-context\";\r\n\r\n//mobx\r\nimport store from './mobx/store';\r\n\r\n//router\r\nimport routes from './config/routes';\r\n\r\nstartRouter(routes, store, {\r\n  html5history: false, // or false if you want to use hash based routing\r\n});\r\n\r\nReactDOM.render(\r\n  <StoreProvider value={store}>\r\n    <div>\r\n      <h1>{store.app.title}</h1>\r\n      <button onClick={() => store.router.goTo(routes.home)}> go home</button>\r\n      <MobxRouter store={store} />\r\n    </div>\r\n  </StoreProvider>, document.getElementById('root')\r\n)"],"sourceRoot":""}